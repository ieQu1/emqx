diff a/apps/emqx_durable_storage/test/emqx_ds_test_helpers.erl b/apps/emqx_durable_storage/test/emqx_ds_test_helpers.erl	(rejected hunks)
@@ -108,29 +108,34 @@ storage_consume(ShardId, TopicFilter, StartTime) ->
 
 storage_consume_stream(ShardId, Stream, TopicFilter, StartTime) ->
     {ok, It0} = emqx_ds_storage_layer:make_iterator(ShardId, Stream, TopicFilter, StartTime),
-    {ok, _It, Msgs} = storage_consume_iter(ShardId, It0),
+    {ok, _It, Msgs} = storage_consume_iter(ShardId, Stream, It0),
     Msgs.
 
-storage_consume_iter(ShardId, It) ->
-    storage_consume_iter(ShardId, It, #{}).
+storage_consume_iter(ShardId, Stream, It) ->
+    storage_consume_iter(ShardId, Stream, It, #{}).
 
-storage_consume_iter(ShardId, It0, Opts) ->
+storage_consume_iter(ShardId, Stream, It0, Opts) ->
     consume_iter_with(
         fun(It, BatchSize) ->
             emqx_ds_storage_layer:next(ShardId, It, BatchSize, emqx_ds:timestamp_us())
         end,
+        Stream,
         It0,
         Opts
     ).
 
-consume_iter_with(NextFun, It0, Opts) ->
-    BatchSize = maps:get(batch_size, Opts, 5),
+consume_iter_with(NextFun, Stream, It0, Opts) ->
+    BatchSize = maps:get(batch_size, Opts, 100),
     case NextFun(It0, BatchSize) of
         {ok, It, _Msgs = []} ->
             {ok, It, []};
         {ok, It1, Batch} ->
-            {ok, It, Msgs} = consume_iter_with(NextFun, It1, Opts),
-            {ok, It, [Msg || {_DSKey, Msg} <- Batch] ++ Msgs};
+            {ok, It, NextBatch} = consume_iter_with(NextFun, Stream, It1, Opts),
+            {ok, It, Batch ++ NextBatch};
+        %% [
+        %%     Msg#message{extra = E0#{'_key' => DSKey, '_stream' => Stream, '_it' => It0}}
+        %%  || {DSKey, Msg = #message{extra = E0}} <- Batch
+        %% ] ++ NextBatch};
         {ok, Eos = end_of_stream} ->
             {ok, Eos, []};
         {error, Class, Reason} ->
